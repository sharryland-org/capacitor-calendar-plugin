{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,oBAAqB,SAAQ,SAAS;IACjD,KAAK,CAAC,mBAAmB,CAAC,OAMzB;QACC,MAAM,EAAE,UAAU,EAAE,gBAAgB,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;QAC/E,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1E,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACpH,MAAM,QAAQ,GAAG;;;;;;UAMX,UAAU;MACd,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;;;;UAIpB,OAAO;aACV,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;aAChC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;UAChB,OAAO;aACV,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;aAChC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;QAClB,KAAK;aACN,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aAC9B,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aACnB,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;WACf,QAAQ;cACL,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC;aAC9C,gBAAgB;;cAEf,CAAC;QACX,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,cAAc,CAAC,CAAC;QAClD,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,QAAQ,GAAG,cAAc,CAAC;QAC5B,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC;QACnB,CAAC,CAAC,KAAK,EAAE,CAAC;QACV,OAAO;IACT,CAAC;IACO,sBAAsB,CAAC,KAAc,EAAE,MAAM,GAAG,KAAK;QAC3D,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC;QACtB,MAAM,QAAQ,GAAG,KAAK;aACnB,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;aACzB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;aACrB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACxB,OAAO,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC3D,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { SharrylandCapacitorCalendarPlugin } from './definitions';\n\nexport class CapacitorCalendarWeb extends WebPlugin implements SharrylandCapacitorCalendarPlugin {\n  async saveEventToCalendar(options: {\n    eventTitle: string;\n    eventDescription?: string;\n    startDate?: number;\n    endDate?: number;\n    location?: string;\n  }): Promise<void> {\n    const { eventTitle, eventDescription, startDate, endDate, location } = options;\n    const dtstamp = new Date().toISOString();\n    const dtstart = new Date(startDate || new Date().getTime()).toISOString();\n    const dtend = new Date(endDate || new Date(new Date().setHours(new Date().getHours() + 1)).getTime()).toISOString();\n    const calendar = `BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//ZContent.net//Zap Calendar 1.0//EN\nCALSCALE:GREGORIAN\nMETHOD:PUBLISH\nBEGIN:VEVENT\nSUMMARY:${eventTitle}\nUID:${Math.random().toString()}\nSEQUENCE:0\nSTATUS:CONFIRMED\nTRANSP:TRANSPARENT\nDTSTAMP:${dtstamp\n      .substring(0, dtstamp.length - 4)\n      .replaceAll('.', '')\n      .replaceAll(':', '')\n      .replaceAll('-', '')}\nDTSTART:${dtstart\n      .substring(0, dtstart.length - 4)\n      .replaceAll('.', '')\n      .replaceAll(':', '')\n      .replaceAll('-', '')}\nDTEND:${dtend\n      .substring(0, dtend.length - 4)\n      .replaceAll('.', '')\n      .replaceAll(':', '')\n      .replaceAll('-', '')}\nLOCATION:${location}\nDESCRIPTION:${this.stripTagsAndFormatters(eventDescription)}\nX-ALT-DESC:${eventDescription}\nEND:VEVENT\nEND:VCALENDAR`;\n    const blob = new File([calendar], 'calendar.ics');\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'calendar.ics';\n    a.rel = 'noopener';\n    a.click();\n    return;\n  }\n  private stripTagsAndFormatters(value?: string, inline = false) {\n    if (!value) return '';\n    const stripped = value\n      .replace(/<[^>]*>?/gm, '')\n      .replace(/\\*\\*/gm, '')\n      .replace(/--/gm, '')\n      .replace(/__/gm, '')\n      .replace(/~~/gm, '')\n      .replace(/```/gm, '');\n    return inline ? stripped.replace(/\\n/gm, ' ') : stripped;\n  }\n}\n"]}